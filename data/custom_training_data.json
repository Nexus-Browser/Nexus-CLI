[
  {
    "prompt": "Create a function to calculate the factorial of a number",
    "completion": "def factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)"
  },
  {
    "prompt": "Write a function to check if a string is a palindrome",
    "completion": "def is_palindrome(s):\n    s = s.lower().replace(' ', '')\n    return s == s[::-1]"
  },
  {
    "prompt": "Create a class for a simple calculator",
    "completion": "class Calculator:\n    def add(self, a, b):\n        return a + b\n    \n    def subtract(self, a, b):\n        return a - b\n    \n    def multiply(self, a, b):\n        return a * b\n    \n    def divide(self, a, b):\n        if b == 0:\n            raise ValueError('Cannot divide by zero')\n        return a / b"
  },
  {
    "prompt": "Write a function to find the maximum element in a list",
    "completion": "def find_max(lst):\n    if not lst:\n        return None\n    return max(lst)"
  },
  {
    "prompt": "Create a function to reverse a string",
    "completion": "def reverse_string(s):\n    return s[::-1]"
  },
  {
    "prompt": "Write a function to check if a number is prime",
    "completion": "def is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True"
  },
  {
    "prompt": "Create a function to generate Fibonacci sequence",
    "completion": "def fibonacci(n):\n    if n <= 0:\n        return []\n    elif n == 1:\n        return [0]\n    elif n == 2:\n        return [0, 1]\n    \n    fib = [0, 1]\n    for i in range(2, n):\n        fib.append(fib[i-1] + fib[i-2])\n    return fib"
  },
  {
    "prompt": "Write a function to sort a list using bubble sort",
    "completion": "def bubble_sort(lst):\n    n = len(lst)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if lst[j] > lst[j+1]:\n                lst[j], lst[j+1] = lst[j+1], lst[j]\n    return lst"
  },
  {
    "prompt": "Create a function to count vowels in a string",
    "completion": "def count_vowels(s):\n    vowels = 'aeiouAEIOU'\n    return sum(1 for char in s if char in vowels)"
  },
  {
    "prompt": "Write a function to check if two strings are anagrams",
    "completion": "def are_anagrams(s1, s2):\n    return sorted(s1.lower()) == sorted(s2.lower())"
  }
]